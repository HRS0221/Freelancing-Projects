import { ChatCommand, ChatCommandResult } from './types'

// Simple command detection - like HTML version
export function detectChatCommand(message: string): ChatCommand {
  if (!message || typeof message !== 'string') {
    return 'none'
  }
  
  const lowerMessage = message.toLowerCase().trim()
  
  if (lowerMessage.includes('search employee') || lowerMessage.includes('find employee')) {
    return 'search_employee'
  }
  
  if (lowerMessage.includes('fill form for')) {
    return 'fill_form'
  }
  
  if (lowerMessage.includes('i need a document') || lowerMessage.includes('request document')) {
    return 'document_request'
  }
  
  if (lowerMessage.includes('help') || lowerMessage.includes('what can you do')) {
    return 'help'
  }
  
  if (lowerMessage.includes('status') || lowerMessage.includes('health')) {
    return 'status'
  }
  
  return 'none'
}

// Simple command processing - like HTML version's hardcoded responses
export async function processChatCommand(message: string): Promise<ChatCommandResult | null> {
  try {
    const command = detectChatCommand(message)
    
    if (command === 'none') {
      return null
    }
    
    switch (command) {
      case 'search_employee': {
        const query = message.replace(/search employee|find employee/i, '').trim()
        if (query) {
          return {
            command: 'search_employee',
            response: `üîç Searching for employees matching "${query}"...\n\nPlease use the employee search feature in the Document Requests mode to find specific employees.`
          }
        } else {
          return {
            command: 'search_employee',
            response: 'üîç Please provide a name or ID to search for. Example: "search employee John" or "search employee EMP0001"'
          }
        }
      }
      
      case 'fill_form': {
        const employeeQuery = message.replace(/fill form for/i, '').trim()
        if (employeeQuery) {
          return {
            command: 'fill_form',
            response: `üìù Auto-filling form for "${employeeQuery}"...\n\nPlease switch to Document Requests mode and use the employee search feature to auto-fill forms with employee details.`
          }
        } else {
          return {
            command: 'fill_form',
            response: 'üìù Please provide an employee name or ID. Example: "fill form for John Smith" or "fill form for EMP0001"'
          }
        }
      }
      
      case 'document_request':
        return {
          command: 'document_request',
          response: 'üìú **Document Request System**\n\nI can help you generate official documents. Please:\n\n1. **Switch to Document Requests mode** using the mode selector above\n2. **Select a document type** from the 16 available options\n3. **Fill in the required details**\n4. **Generate and download** your document\n\n**Available Documents:**\n‚Ä¢ Bonafide / Employment Verification Letter\n‚Ä¢ Experience Certificate\n‚Ä¢ Offer Letter Copy\n‚Ä¢ Appointment Letter Copy\n‚Ä¢ Promotion Letter\n‚Ä¢ Relieving Letter\n‚Ä¢ Salary Slips\n‚Ä¢ Form 16 / Tax Documents\n‚Ä¢ Salary Certificate\n‚Ä¢ PF Statement / UAN details\n‚Ä¢ No Objection Certificate (NOC)\n‚Ä¢ Non-Disclosure Agreement Copy\n‚Ä¢ ID Card Replacement\n‚Ä¢ Medical Insurance Card Copy\n‚Ä¢ Business Travel Authorization Letter\n‚Ä¢ Visa Support Letter\n\n‚ö†Ô∏è **Important:** Document generation requires ALL employee details to match our records exactly.'
        }
      
      case 'help':
        return {
          command: 'help',
          response: 'ü§ñ **Reliance Jio Infotech Solutions - Your Intelligent Companion**\n\nI can help you with three main services:\n\nüí¨ **HR Q&A Chat**\n‚Ä¢ Ask about company policies, benefits, and procedures\n‚Ä¢ Get information about leave policies, attendance, and more\n‚Ä¢ Request official documents (type "I need a document")\n‚Ä¢ Powered by semantic search and AI assistance\n‚Ä¢ Quick and accurate responses to your queries\n\nüìÑ **PDF Summarization**\n‚Ä¢ Upload PDFs up to 50MB\n‚Ä¢ Handles large documents (30+ pages)\n‚Ä¢ Extracts and formats table data\n‚Ä¢ Powered by advanced AI technology\n‚Ä¢ Real-time processing with progress tracking\n\nüìú **Document Requests**\n‚Ä¢ Request any of 16 official document types\n‚Ä¢ Official Reliance Jio Infotech Solutions format\n‚Ä¢ Professional document generation\n‚Ä¢ Immediate download available\n‚Ä¢ **Strict validation:** ALL fields must match exactly with employee records\n‚Ä¢ Employee data validation against records\n\nüí° **Quick Commands:**\n‚Ä¢ Type "qa" or "chat" to switch to HR Q&A mode\n‚Ä¢ Type "summarize" or "pdf" to switch to PDF mode\n‚Ä¢ Type "I need a document" to request official documents\n‚Ä¢ Search employees: "search employee [name or ID]"\n‚Ä¢ Auto-fill forms: "fill form for [name or ID]"\n‚Ä¢ Use the mode buttons above for quick switching\n\n‚ö†Ô∏è **Important:** Document generation requires ALL employee details to match our records exactly.'
        }
      
      case 'status':
        return {
          command: 'status',
          response: 'üü¢ **System Status:** All services are operational\n\nüí¨ **HR Q&A Chat:** Semantic Search - Active\nüìä **PDF Processing:** Advanced AI - Active\nüìú **Document Generation:** ReportLab - Active\nüåê **API Endpoints:** All responding\n\nEverything is working perfectly! üöÄ'
        }
      
      default:
        return null
    }
  } catch (error) {
    console.error('Error processing chat command:', error)
    return null
  }
}
